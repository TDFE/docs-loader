{"version":3,"sources":["../src/index.js"],"names":["module","exports","docsLoader","cacheable","callback","async","loaderOptions","parseQuery","query","transformers","concat","map","test","_ref","toString","use","source","markdown","generate","picked","pickedPromises","pick","nodePlugins","getPlugins","traverse","fileContent","readFileSync","join","process","cwd","filename","push","all","then","sourceDataString","stringify","lazyLoad"],"mappings":";;;;;;;;;;;;;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,UAAT,GAAsB;AACrC,MAAI,KAAKC,SAAT,EAAoB;AAClB,SAAKA,SAAL;AACD;AACD,MAAMC,WAAW,KAAKC,KAAL,EAAjB;AACA,MAAMC,gBAAgB,sBAAYC,UAAZ,CAAuB,KAAKC,KAA5B,CAAtB;AACA,MAAMC,eAAeH,cAAcG,YAAd,CAA2BC,MAA3B,CAAkC,4BAAlC,EAAqDC,GAArD,CAAyD;AAAA,WAAS,EAACC,MAAMC,KAAKD,IAAL,CAAUE,QAAV,EAAP,EAA6BC,KAAKF,KAAKE,GAAvC,EAAT;AAAA,GAAzD,CAArB;AACA,MAAMC,SAAS,sBAAc,EAAd,EAAkBV,cAAcU,MAAhC,CAAf;AACA,MAAMC,WAAW,wBAAcC,QAAd,CAAuBF,MAAvB,EAA+BP,YAA/B,CAAjB;AACA,MAAMU,SAAS,EAAf;AACA,MAAMC,iBAAiB,EAAvB;AACA,MAAId,cAAce,IAAlB,EAAwB;AACtB,QAAMC,cAAcC,WAAW,MAAX,CAApB;AACA,4BAAcC,QAAd,CAAuBP,QAAvB,EAAiC,oBAAY;AAC3C,UAAMQ,cAAc,aAAGC,YAAH,CAAgB,eAAKC,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBC,QAAzB,CAAhB,EAAoDhB,QAApD,EAApB;AACAM,qBAAeW,IAAf,CAAoB,sBAAY,mBAAW,CAAE,CAAzB,CAApB;AACD,KAHD;AAID;;AAED,oBAAQC,GAAR,CAAYZ,cAAZ,EAA4Ba,IAA5B,CAAiC,YAAM;AACrC,QAAMC,mBAAmB,wBAAcC,SAAd,CAAwBlB,QAAxB,EAAkC;AACzDmB,gBAAU9B,cAAc8B,QADiC;AAEzD3B;AAFyD,KAAlC,CAAzB;AAIAL,aAAS,IAAT,uCAAkD8B,gBAAlD,uBAAoF,yBAAef,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAApF;AACD,GAND;AAOD,CA1BD,C,CAbA","file":"index.js","sourcesContent":["/**\n * @Author: Zhengfeng.Yao <yzf>\n * @Date:   2017-06-02 17:13:27\n * @Last modified by:   yzf\n * @Last modified time: 2017-06-02 17:13:29\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport loaderUtils from 'loader-utils';\nimport sourceHandler from './utils/source-handler';\nimport { getTransformers } from './utils/tool';\n\nmodule.exports = function docsLoader() {\n  if (this.cacheable) {\n    this.cacheable();\n  }\n  const callback = this.async();\n  const loaderOptions = loaderUtils.parseQuery(this.query);\n  const transformers = loaderOptions.transformers.concat(getTransformers()).map(_ref => ({test: _ref.test.toString(), use: _ref.use}));\n  const source = Object.assign({}, loaderOptions.source);\n  const markdown = sourceHandler.generate(source, transformers);\n  const picked = {};\n  const pickedPromises = [];\n  if (loaderOptions.pick) {\n    const nodePlugins = getPlugins('node');\n    sourceHandler.traverse(markdown, filename => {\n      const fileContent = fs.readFileSync(path.join(process.cwd(), filename)).toString();\n      pickedPromises.push(new Promise(resolve => {}));\n    });\n  }\n\n  Promise.all(pickedPromises).then(() => {\n    const sourceDataString = sourceHandler.stringify(markdown, {\n      lazyLoad: loaderOptions.lazyLoad,\n      transformers\n    });\n    callback(null, `module.exports = {\\n markdown: \"${sourceDataString}\", \\n picked: \"${JSON.stringify(picked, null, 2)}\"\\n]\\n}`);\n  });\n}\n"]}